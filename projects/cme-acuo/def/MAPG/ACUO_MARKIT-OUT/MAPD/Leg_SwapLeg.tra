<Prolog>
    <LastModification>
        <Transformer>
            <Program>Mapping Form</Program>
            <VersionNumber>3.5.5</VersionNumber>
            <BuildNumber>194</BuildNumber>
        </Transformer>
        <User>hicham</User>
        <Host>Win7-VM</Host>
        <Timestamp>16/08/2016 09:33:45</Timestamp>
        <Checksum>a5958ded</Checksum>
    </LastModification>
</Prolog>
<MappingDefinition name="Leg_SwapLeg" group="Map:ACUO_MARKIT-OUT" category="Advanced Actions">
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Id"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="id"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Currency"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="currency"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Rate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="rate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="type"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Type"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <IfAction>
            <Condition>
                <Comparison>
                    <FirstTerm>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Type"/>
                    </FirstTerm>
                    <Operator>EQ</Operator>
                    <SecondTerm>
                        <Literal>FLOAT</Literal>
                    </SecondTerm>
                </Comparison>
            </Condition>
            <ThenAction>
                <ActionStep>
                    <FunctionCall>
                        <Property name="Input" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Fixing/Name"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Output" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="fixing/name"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Copy></Copy>
                    </FunctionCall>
                </ActionStep>
                <ActionStep>
                    <FunctionCall>
                        <Property name="Input" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Fixing/Term"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Output" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="fixing/term"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Copy></Copy>
                    </FunctionCall>
                </ActionStep>
                <ActionStep>
                    <FunctionCall>
                        <Property name="Output" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="fixing/arrears"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <Literal>false</Literal>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Copy></Copy>
                    </FunctionCall>
                </ActionStep>
            </ThenAction>
        </IfAction>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Spread"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="spread"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Table" type="namedlookuptable">
                <Value>DayCount</Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Daycount"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="daycount"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Mapper>NamedTableLookup</Mapper>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Notional"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="notional"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Mapper>DecimalToText</Mapper>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Paydates/StartDate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="paydates/startdate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Paydates/Enddate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="paydates/enddate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Paydates/Frequency"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="paydates/freq"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Table" type="namedlookuptable">
                <Value>BusDayConv</Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Paydates/BusinessDayConvention"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="paydates/rollcode"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Mapper>NamedTableLookup</Mapper>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <RepeatAction repeatCounter="Counter1">
            <ActionStep>
                <FunctionCall>
                    <Property name="Input" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Paydates/HolidayCalendarId[Counter1]"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Property name="Output" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="paydates/holidays/code[Out1]"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Copy></Copy>
                </FunctionCall>
            </ActionStep>
            <ScopeB specType="TO_DATA" contextName="Output"
                pathString="paydates/holidays/code[]" outputPosnSpecifier="Out1"/>
            <RepeatLimit>
                <PathNodeSpec specType="FROM_DATA" contextName="Input" pathString="Paydates/HolidayCalendarId[#]"/>
            </RepeatLimit>
            <ScopeA specType="FROM_DATA" contextName="Input" pathString="Paydates/HolidayCalendarId[]"/>
        </RepeatAction>
    </ActionStep>
    <InputDefinition name="Input" optional="false" repeating="false">
        <Type>IrSwap.IrSwapLeg</Type>
    </InputDefinition>
    <OutputDefinition name="Output" optional="false" repeating="false">
        <Type>swapleg</Type>
    </OutputDefinition>
    <CalledAsSubmappingActionExceptionRules>
        <ActionExceptionRule>
            <Scenario>SOURCE_ABSENT</Scenario>
            <UseDefaultValue>false</UseDefaultValue>
            <Action>SMART_SKIP</Action>
        </ActionExceptionRule>
    </CalledAsSubmappingActionExceptionRules>
</MappingDefinition>
