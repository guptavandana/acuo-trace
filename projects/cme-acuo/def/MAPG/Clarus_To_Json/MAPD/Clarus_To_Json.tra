<Prolog>
    <LastModification>
        <Transformer>
            <Program>Mapping Form</Program>
            <VersionNumber>3.5.5</VersionNumber>
            <BuildNumber>194</BuildNumber>
        </Transformer>
        <User>hicham</User>
        <Host>Win7-VM</Host>
        <Timestamp>04/08/2016 21:00:22</Timestamp>
        <Checksum>160ea96c</Checksum>
    </LastModification>
</Prolog>
<MappingDefinition name="Clarus_To_Json" group="Map:Clarus_To_Json">
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="Body"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="portfolioData[1]/data"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Encoding" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>UTF-8</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Mapper>BytesToText</Mapper>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="PortfolioData/DataFormat"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="portfolioData[1]/dataFormat"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="PortfolioData/DataType"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="portfolioData[1]/dataType"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Input" pathString="ReportingCcy"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="reportingCcy"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="valueDate"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <ValueGeneratorReference>DateNow</ValueGeneratorReference>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Format" type="string">
                <Value>YYYYMMDD</Value>
            </Property>
            <Mapper>DateToText</Mapper>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="varCalcMethod"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>Optimised</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="resultStats"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>Default</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="marginMethodology"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>LCH</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="isHouseAccount"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>false</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="imMultiplier"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>1.0</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <FunctionCall>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="failOnWarning"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <Literal>false</Literal>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <InputDefinition name="Input" optional="false" repeating="false">
        <Type>Clarus</Type>
    </InputDefinition>
    <OutputDefinition name="Output" optional="false" repeating="false">
        <Message>ClarusRequest</Message>
    </OutputDefinition>
    <CalledAsSubmappingActionExceptionRules>
        <ActionExceptionRule>
            <Scenario>SOURCE_ABSENT</Scenario>
            <UseDefaultValue>false</UseDefaultValue>
            <Action>SMART_SKIP</Action>
        </ActionExceptionRule>
    </CalledAsSubmappingActionExceptionRules>
</MappingDefinition>
