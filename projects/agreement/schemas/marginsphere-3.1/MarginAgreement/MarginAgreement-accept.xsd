<?xml version="1.0" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="accept.marginagreement.api.acadiasoft.com" xmlns:tns="accept.marginagreement.api.acadiasoft.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="marginAgreements" type="tns:AcadiaSoft.Margin.Agreement.List"/>

  <xs:complexType name="AcadiaSoft.Margin.Agreement.List">
    <xs:sequence>
      <xs:element name="skip" type="xs:int" form="qualified" minOccurs="0"/>
      <xs:element name="max" type="xs:int" form="qualified" minOccurs="0"/>
      <xs:element name="totalCount" type="xs:int" form="qualified" minOccurs="0"/>
      <xs:element name="marginAgreement" type="tns:AcadiaSoft.Margin.Agreement" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AcadiaSoft.Margin.Agreement">
    <xs:all>
      <xs:element name="referenceMappings" form="qualified" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="referenceMapping" type="tns:AcadiaSoft.Margin.Agreement.Reference.Mapping" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="longName" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="agreementShortName" type="xs:string" form="qualified"/>
      <xs:element name="agreementVersion" type="xs:int" form="qualified" minOccurs="0"/>
      <xs:element name="ampId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="autoCreateMarginCallFromNotification" type="xs:boolean" form="qualified" minOccurs="0"/>
      <xs:element name="autoCreateMarginCallFromStatement" type="xs:boolean" form="qualified" minOccurs="0"/>
      <xs:element name="autoCreateMarginNotificationFromStatement" type="xs:boolean" form="qualified" minOccurs="0"/>
      <xs:element name="clearedConfigurationAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="counterpartyBTransportCurrency" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="externalUsername" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="localCounterpartyAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="localCounterpartyLabel" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="externalReference" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="temporaryExternalReference" type="xs:string" form="qualified" minOccurs="0"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="AcadiaSoft.Margin.Agreement.Reference.Mapping">
    <xs:all>
      <xs:element name="ampId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="callType" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="createDate" type="xs:dateTime" form="qualified" minOccurs="0"/>
      <xs:element name="createUserAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="expireDate" type="xs:dateTime" form="qualified" minOccurs="0"/>
      <xs:element name="expireUserAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="externalUsername" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="marginAgreementAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="marginAgreementReference" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="marginAgreementType" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="modifyDate" type="xs:dateTime" form="qualified" minOccurs="0"/>
      <xs:element name="modifyUserAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="organizationAmpId" type="xs:string" form="qualified" minOccurs="0"/>
      <xs:element name="role" type="xs:string" form="qualified" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
</xs:schema>


