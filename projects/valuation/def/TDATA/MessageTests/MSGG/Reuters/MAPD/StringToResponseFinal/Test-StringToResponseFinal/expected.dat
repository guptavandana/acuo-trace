{
  "portfolio" : {
    "customPortfolio" : {
      "bondOutputs" : {
        "NOK" : [ {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "US912796HW25"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "US912796HW2=X5"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "UST"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "UST     Bill 06\/09\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "US912796HW25"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-06-09T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 18\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 80\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "US912796JE09"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "US912796JE0=X4"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "UST"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "UST     Bill 03\/02\/17 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "US912796JE09"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-02T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "DE0001137461"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001137461=BTEC"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV   0.250 06\/10\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001137461"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-06-10T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "DE0001141604"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001141604=CALP"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV   2.750 04\/08\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001141604"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-04-08T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1023481F17"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP03480042=ICJP"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.100 01\/15\/17 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1023481F17"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-01-15T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.GetAttribute(Object iAttributeType)\r\n   at AdfinCore.AdnObject.GetAttribute(Int32 attribute) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 124\r\n   at AdfinCore.AdnObject.GetDateTimeAttribute(Int32 adxAttribute) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 200\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 80\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1051041C55"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP01040045="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.200 03\/20\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1051041C55"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0005160111"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0005160111=COBA"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV         01\/13\/17 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0005160111"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-01-13T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 256\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0004164775"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT1YT=TMKR"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV   4.000 02\/01\/17 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0004164775"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-02-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "SG6TI7000001"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : ""
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV         11\/01\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SG6TI7000001"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-11-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "HK0000277696"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKY1597=ICHK"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV         12\/28\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK0000277696"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-12-28T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "HK4159036564"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK1612=ICHK"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV   3.780 12\/06\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK4159036564"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-12-06T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "AU2CLT260861"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : ""
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "AUGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "AUGV         08\/26\/16 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "AU2CLT260861"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2016-08-26T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "AUD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "NOK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.ComputeFrbSettlementDate(String p_settlementRuleStructure, String p_settlementRule, Nullable`1 p_tradeDate, Nullable`1 p_maturityDate) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 258\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbDatesHelpers.ComputeFrbSettlementDate(BondArgs p_bond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbDatesHelpers.cs:line 54\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.ComputeDefault() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 85\r\n   at FixedRateBondCBO.CalculationModules.SettlementCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\SettlementCM.cs:line 35\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealTimeDataManagerCM.Compute(FrbData p_frbData) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealTimeDataManagerCM.cs:line 98\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RealTimeData.RealtimeQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RealTimeData\\RealtimeQuoteCM.cs:line 50\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.CurrencyDataCM.Compute(Boolean p_isBond) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CurrencyDataCM.cs:line 105\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.RedemptionDataCM.Compute(Boolean p_computeDateFromAverageLife) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\RedemptionDataCM.cs:line 39\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.Benchmark.BenchmarkQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\Benchmark\\BenchmarkQuoteCM.cs:line 25\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.GetAllUserQuotes() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 239\r\n   at FixedRateBondCBO.CalculationModules.PricingQuoteCM.Compute() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\PricingQuoteCM.cs:line 26\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 57\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.Extensions.FrbDataExtensions.GetNativePrice(FrbData p_frbData, Boolean p_isBondNativePrice) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\Extensions\\FrbDataExtensions.cs:line 294\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "XS1045278410"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "XS104527841=1M"
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "BKENG"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "BKENG  0.875 03\/17\/17 MATd"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "XS1045278410"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedBidPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "quotedAskPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "priceQuotationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceQuotationType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "CashCleanPrice"
            },
            "priceSource" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "priceType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "accruedAmountInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInDealCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "positionInReportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            },
            "reportCcy" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "calculationDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "asOfDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "settlementdate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accrued" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "dirtyPrice" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "yieldType" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error"
            },
            "redemptionDate" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : "0001-01-01T00:00:00"
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        } ],
        "OK" : [ {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "DE0001104636"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE110463="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV         03\/16\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001104636"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-16T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.92
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.87
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.97
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "19:00:19"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HSBC        "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009200.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009200.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009200
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009200.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.92000000000002
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.92000000000002
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.92427445281191589
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-16T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.92427445281191589
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "DE0001141737"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE114173="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV         04\/09\/21"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001141737"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-04-09T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.968
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.94800000000001
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.988
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "19:05:18"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEKA        "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1019680.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1019680.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1019680
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1019680.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.96800000000002
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 101.96799999999999
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.47980744605581571
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-04-09T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.47980744605581571
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested",
            "message" : {
              "Value" : "Technical error",
              "Type" : "Error",
              "TechnicalMessage" : "DataModels.ErrorHandling.ErrorableException: Field in error state ---> System.Runtime.InteropServices.COMException: Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at AdfinXAnalyticsObjects.IAdxObject.SetAttribute(Object iAttributeType, Object Val)\r\n   at AdfinCore.AdnObject.SetAttribute(Int32 adxAttribute, Object value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 142\r\n   at AdfinCore.AdnObject.SetDateTimeAttribute(Int32 adxAttribute, DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnObject.cs:line 207\r\n   at AdfinCore.AdnInstrument.set_PROD_MATURITY(DateTime value) in d:\\workspace\\TRACS_CBO_Core\\AdfinCore\\AdnInstrument.cs:line 58\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 37\r\n   at FixedRateBondCBO.CalculationCore.CalculationHelpers.BondHelper.InitNormalizedPriceAdnBond(BondArgs p_bondArgs, AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_dcRateModel, AdnFxModel p_fxModel, Func`3 p_priceRoundingFunc) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\CalculationHelpers\\BondHelper.cs:line 136\r\n   at FixedRateBondCBO.DataModel.Core.BondArgs.ToNormalizedBond(AdnRateModel p_rateModel, AdnRateModel p_refinancingRateModel, AdnRateModel p_reinvestedRateModel, AdnRateModel p_discountRateModel, AdnFxModel p_fxModel) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\DataModel\\Core\\BondArgs.cs:line 74\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbCouponHelpers.ComputeFxCouponResultsF(BondArgs p_bond, Boolean p_isZeroCoupon, FxModelArgs p_fxModel) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbCouponHelpers.cs:line 31\r\n   at FixedRateBondCBO.CalculationCore.FrbHelpers.FrbCouponHelpers.ComputeFxCouponResults(BondArgs p_bond, Boolean p_isZeroCoupon, FxModelArgs p_fxModel) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationCore\\FrbHelpers\\FrbCouponHelpers.cs:line 26\r\n   at FixedRateBondCBO.CalculationModules.CouponDataCM.ComputeAccruedPlusOne() in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\CalculationModules\\CouponDataCM.cs:line 78\r\n   at DataModels.ErrorHandling.Errorable.Create[T](Func`1 func) in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\Errorable.cs:line 58\r\n   --- End of inner exception stack trace ---\r\n   at DataModels.ErrorHandling.ErrorableImpl`1.get_Value() in d:\\workspace\\TRACS_CBO_Core\\DataModels\\ErrorHandling\\ErrorableImpl.cs:line 19\r\n   at FixedRateBondCBO.OutputBuilder.CreateStatusField[T](Func`1 func, Boolean p_addGlobalException) in d:\\workspace\\TRACS_CBO_FI_BONDS\\FixedRateBondCBO\\FixedRateBondCBO\\OutputBuilder.cs:line 731"
            }
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "DE0001119584"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE111958="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEGV         03\/22\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DE0001119584"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.00450000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.004
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.005
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "14:24:29"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "NORDEA      "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000045.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000045.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000045
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000045.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.00450000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.00450000000001
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -1.6199271032841505
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -1.6199271032841505
            },
            "accruedNextDay" : {
              "ErrorMessage" : "Field in error state\r\nError HRESULT E_FAIL has been returned from a call to a COM component.",
              "FromData" : false,
              "Status" : "Error",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1023561F93"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP03560042="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.1
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.100 09\/15\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1023561F93"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-09-15T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.201
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.197
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.205
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "04:19:51"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TRADEWEB    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002009
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 19
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002028
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002010
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 19
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002029
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.0019177999999999999
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.20099999999998
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.2029178
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.31300000000000006
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-09-15T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.31300000000000006
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.0021917
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1023621G33"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP03620042="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.1
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.100 03\/15\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1023621G33"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-15T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.43
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.421
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.43900000000001
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "04:50:17"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TRADEWEB    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1004300
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 19
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1004319
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1004300
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 19
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1004319
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.0019177999999999999
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.42999999999999
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.43191780000001
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.336
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-15T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.336
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.0021917
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1051161DC4"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP01160045="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.2
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.200 12\/20\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1051161DC4"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-20T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.8425
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.83
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.855
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:15:39"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TRADEWEB    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1008424
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 504
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1008928
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1008425
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 504
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1008929
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.050410899999999995
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.84249999999999
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.8929109
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.279
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-20T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.279
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.050958899999999994
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1051271G37"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP01270045="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.1
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   0.100 03\/20\/21"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1051271G37"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-03-20T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.0385
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.02
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.057
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:13:52"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TRADEWEB    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1010385
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1010390
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1010385
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1010390
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.00054789999999999993
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 101.03850000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 101.0390479
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.158
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-03-20T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.158
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.00082190000000000008
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "JP1103121AC2"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP03120067="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.2
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPGV   1.200 12\/20\/20"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JP1103121AC2"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-12-20T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.1175
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.10000000000001
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.135
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:15:35"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TRADEWEB    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1051175
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3024
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1054199
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1051175
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3024
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1054199
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "JPY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.3024657
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.11749999999999
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 105.4199657
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.15700000000000003
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-12-20T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.15700000000000003
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.3057534
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0004957574"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT495757="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3.5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV   3.500 12\/01\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0004957574"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.869
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.849
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.889
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "04:00:06"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1058690
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 10576.9
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1069266.9
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1058690
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 10576.9
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1069266.9
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.05769
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 105.86899999999999
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 106.92669
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.041447258698838522
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.041447258698838522
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.06731
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0003644769"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT364476="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4.5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV   4.500 02\/01\/20"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0003644769"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-02-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 111.434
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 110.971
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 111.897
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:15:31"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1114340
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5966.9000000000005
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1120306.9
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1114340
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5966.9000000000005
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1120306.9
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.59669
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 111.43399999999998
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 112.03069
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.47964527784516719
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-02-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.47964527784516719
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.60912
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0004953417"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT495341="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4.5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV   4.500 03\/01\/24"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0004953417"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2024-03-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 116.72800000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 116.708
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 116.748
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "23:59:47"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1167280
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2445.7000000000003
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1169725.7000000002
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1167280
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2445.7000000000003
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1169725.7000000002
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.24457000000000004
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 116.72800000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 116.97257
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.925221872147391
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2024-03-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.925221872147391
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.25679
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "IT0001444378"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT144437="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "ITGV   6.000 05\/01\/31"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "IT0001444378"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2031-05-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 136.716
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 136.591
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 136.841
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "23:59:47"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1367160.0000000002
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 23204.4
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1390364.4000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1367160
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 23204.4
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1390364.4000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.32044
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 136.716
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 139.03644
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.8459664094830774
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2031-05-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.8459664094830774
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.3370200000000003
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "SG7U33949433"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGN710100Z="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.375
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV   2.375 04\/01\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SG7U33949433"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-04-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.08000000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.06
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.10000000000001
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "03:19:08"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEUTSCHE    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000800.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 11092.032967032968
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1011892.0329670331
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000800
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 11092.032967032968
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1011892.0329670331
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1092032967032968
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.08000000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 101.18920329670328
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.051059465815994493
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-04-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.051059465815994493
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1157280219780221
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "SG7S29941612"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGNX09100W="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV   2.500 06\/01\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SG7S29941612"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-06-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.84
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.79
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.89
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "03:19:08"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEUTSCHE    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1028400
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 7486.263736263737
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1035886.2637362638
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1028400
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 7486.263736263737
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1035886.2637362638
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.74862637362637363
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.84
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 103.58862637362635
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1882263871913541
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-06-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1882263871913541
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.75549450549450547
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "SG7Y76964295"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGNX11100X="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.25
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV   2.250 06\/01\/21"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SG7Y76964295"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-06-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.55000000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.5
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.60000000000001
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "03:19:08"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEUTSCHE    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1025500.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6737.6373626373625
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1032237.6373626374
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1025500
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6737.6373626373625
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1032237.6373626374
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.6737637362637362
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 102.55000000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 103.22376373626373
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.6193332178935407
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-06-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.6193332178935407
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.67994505494505486
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "SG3260987684"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGNX13100H="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.75
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGGV   2.750 07\/01\/23"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SG3260987684"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2023-07-01T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.67
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.57000000000001
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.77
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "03:19:08"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEUTSCHE    "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1046700
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5925.4143646408838
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1052625.4143646408
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1046700
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5925.4143646408838
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1052625.4143646408
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SGD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.59254143646408841
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.67
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 105.26254143646409
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.9563852988332515
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2023-07-01T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.9563852988332515
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.60013812154696133
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "HK0000288131"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKY1687="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV         03\/22\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK0000288131"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.9995
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.999
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "08:54:49"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999995
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999995
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999995
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999995
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.9995
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 99.9995
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.091250456253838111
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.091250456253838111
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "HK0000132073"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK05Y1712="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.27
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV   0.270 12\/18\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK0000132073"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-12-18T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.841000000000008
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.741
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.941
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "00:18:00"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 998410.00000000012
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 673.15068493150693
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999083.15068493155
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 998410
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 673.15068493150693
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 999083.15068493155
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.067315068493150693
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.841000000000008
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 99.908315068493152
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.48464303821697358
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-12-18T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.48464303821697358
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.068054794520547954
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "HK0000191137"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK05Y1903="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.35
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKGV   1.350 03\/25\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HK0000191137"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-03-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.70500000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.605
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.805
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "01:58:00"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007050.0000000002
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6472.6027397260268
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1013522.6027397262
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007050
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6472.6027397260268
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1013522.6027397262
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "HKD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.64726027397260266
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.70500000000003
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 101.35226027397262
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.99798945391253113
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-03-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.99798945391253113
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.650958904109589
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "XS1378790262"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GB137879026="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.25
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "BKENG"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "BKENG  1.250 03\/14\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "XS1378790262"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-03-14T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.1565
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.118
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.195000000000007
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "00:04:54"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 991564.99999999988
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 243.05555555555557
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 991808.0555555555
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 991565
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 243.05555555555557
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 991808.0555555555
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.024305555555555556
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.1565
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 99.180805555555565
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.6847763715481447
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-03-14T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.6847763715481447
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.027777777777777776
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "XS1122061242"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GB112206124="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2.7
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV   2.700 10\/21\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "XS1122061242"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-10-21T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.051
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 98.901
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.201000000000008
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "03:44:21"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 990510
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 11169.86301369863
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1001679.8630136987
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 990510
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 11169.86301369863
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1001679.8630136987
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "CNY"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "CNY"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1169863013698631
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 99.051
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.16798630136985
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4.3637098456525116
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-10-21T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4.3637098456525116
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.1243835616438356
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "GB00B1VWPC84"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBT518="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV   5.000 03\/07\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GB00B1VWPC84"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-07T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.7975
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.785
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.81
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "18:00:00"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1047975.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1766.304347826087
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1049741.3043478262
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1047975
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1766.304347826087
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1049741.3043478262
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBP"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBP"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.1766304347826087
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 104.79750000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 104.97413043478261
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.02586390351553737
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-03-07T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.02586390351553737
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.19021739130434787
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "GB00B4YRFP41"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBT3T19="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3.75
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBGV   3.750 09\/07\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GB00B4YRFP41"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-09-07T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 109.093
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 109.07900000000001
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 109.107
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "17:58:00"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR COMPOSITE"
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1090930
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1324.7282608695652
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1092254.7282608694
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1090930
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1324.7282608695652
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1092254.7282608694
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBP"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "GBP"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.13247282608695651
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 109.09299999999999
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 109.22547282608697
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.057514960180088372
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-09-07T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.057514960180088372
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.14266304347826086
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "FR0012634558"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0012634558="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV         02\/25\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0012634558"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-02-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.534
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.504
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.56400000000001
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:07:19"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SOC GEN     "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1005340.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1005340.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1005340
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1005340.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.534
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.53399999999999
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.56854753388170043
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-02-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.56854753388170043
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "FR0013101466"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0013101466="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV         02\/25\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0013101466"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-02-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.90100000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.861
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.941
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "18:50:35"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "DEKA        "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009010.0000000002
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009010.0000000002
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009010
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009010.0000000002
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.90100000000002
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.901
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.46265491351355587
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-02-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.46265491351355587
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "FR0120746609"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0120746609="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV   1.000 07\/25\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0120746609"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-07-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.608
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.578
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.638
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:07:18"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "SOC GEN     "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1006080.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6547.945
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1012627.9450000002
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1006080
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 6547.945
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1012627.9450000002
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.6547945
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.608
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 101.2627945
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.75177639083037284
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-07-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.75177639083037284
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.6575342
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "FR0000570905"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0000570905="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV  IO Str 10\/25\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0000570905"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-10-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.735
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.64
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.83
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "00:04:15"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007350
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007350
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007350
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007350
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.735
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.735
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.4574306768118373
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-10-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.4574306768118373
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "FR0000570947"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0000570947="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FRGV  IO Str 10\/25\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "FR0000570947"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-10-25T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.74000000000001
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.61
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.87
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "00:04:15"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007400.0000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007400.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007400
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007400.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 100.74000000000001
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 100.74000000000001
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.28346407575835825
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-10-25T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : -0.28346407575835825
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "US50064FAJ30"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "50064FAJ3="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 7.125
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV   7.125 04\/16\/19"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "US50064FAJ30"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-04-16T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 110.501
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 110.458
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 110.54400000000001
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "01:46:05"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : ""
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1105010
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 30875
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1135885
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1105010
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 30875
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1135885
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "USD"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-22T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3.0875
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 110.501
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 113.58850000000001
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.9172533356343513
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2019-04-16T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.9172533356343513
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 3.1072916666666663
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "XS0277265269"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR027726526="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4.25
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV   4.250 12\/07\/21"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "XS0277265269"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-12-07T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 118.9415
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 118.68
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 119.203
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "01:10:03"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "PercentCleanPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "TR PRICING  "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Mid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1189415
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 12109.589041095891
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1201524.5890410959
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1189415
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 12109.589041095891
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1201524.5890410959
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "EUR"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-21T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.2109589041095892
            },
            "cleanPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 118.9415
            },
            "dirtyPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 120.15245890410959
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.20860339468468544
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2021-12-07T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 0.20860339468468544
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.2226027397260273
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "KR103501G4C0"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR103501G4C="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 2
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV   2.000 12\/10\/17"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR103501G4C0"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-12-10T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10093.49
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10093.49
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data"
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "14:51:48"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "CashGrossPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KOFIA       "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Bid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1003854.5000000001
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5494.5
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009349
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1003854.5
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5494.5
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1009349
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 54.94
            },
            "cleanPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 10038.55
            },
            "dirtyPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10093.49
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.4616098673786655
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-12-10T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.4616098673786655
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 55.490000000000009
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "KR103501G5C7"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR103501G5C="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.75
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV   1.750 12\/10\/18"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR103501G5C7"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-10T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10075.08
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10075.08
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data"
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "05:02:06"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "CashGrossPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRX - KTS   "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Bid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002700.3100000003
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4807.69
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007508.0000000001
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1002700.31
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 4807.69
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1007508.0000000001
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 48.070000000000007
            },
            "cleanPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 10027.01
            },
            "dirtyPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 10075.08
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.5897408125520922
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2018-12-10T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.5897408125520922
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 48.550000000000011
            }
          }
        }, {
          "status" : {
            "priceStatus" : "OK",
            "analyticStatus" : "NotRequested"
          },
          "description" : {
            "securityCode" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "KR1035027062"
            },
            "ric" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR103502706="
            },
            "coupon" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 5
            },
            "ticker" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV"
            },
            "assetClass" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Frb"
            },
            "instrumentDescription" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRGV   5.000 06\/10\/20"
            },
            "isin" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KR1035027062"
            },
            "dealId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "transactionId" : {
              "FromData" : false,
              "Status" : "Computed"
            },
            "maturityDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-06-10T00:00:00"
            },
            "portfolioId" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "-1"
            },
            "portfolioCode" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "portfolioName" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "customPortfolio"
            },
            "strategy" : {
              "FromData" : false,
              "Status" : "Data"
            }
          },
          "quote" : {
            "quotedPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 11150.92
            },
            "quotedBidPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 11150.92
            },
            "quotedAskPrice" : {
              "FromData" : true,
              "Status" : "Data"
            },
            "priceQuotationDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2017-03-16T00:00:00"
            },
            "priceQuotationTime" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "14:51:13"
            },
            "priceQuotationType" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "CashGrossPrice"
            },
            "priceSource" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KOFIA       "
            },
            "priceType" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "Bid"
            }
          },
          "valuation" : {
            "cleanMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1101355.74
            },
            "accruedAmountInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 13736.260000000002
            },
            "dirtyMarketValueInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1115092
            },
            "cleanMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1101355.74
            },
            "accruedAmountInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 13736.260000000002
            },
            "dirtyMarketValueInReportCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1115092
            },
            "positionInDealCcy" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1000000
            },
            "positionInReportCcy" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : 1000000
            },
            "nominalCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            },
            "reportCcy" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "KRW"
            }
          },
          "pricingAnalysis" : {
            "tradeDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "calculationDate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "asOfDate" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "2017-03-17T00:00:00"
            },
            "settlementdate" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : "2017-03-20T00:00:00"
            },
            "accrued" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 137.36
            },
            "cleanPrice" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 11013.56
            },
            "dirtyPrice" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : 11150.92
            },
            "yield" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.7528383167404114
            },
            "yieldType" : {
              "FromData" : false,
              "Status" : "Overridden",
              "FieldValue" : "Native"
            },
            "redemptionDate" : {
              "FromData" : true,
              "Status" : "Data",
              "FieldValue" : "2020-06-10T00:00:00"
            },
            "yieldToMaturity" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 1.7528383167404114
            },
            "accruedNextDay" : {
              "FromData" : false,
              "Status" : "Computed",
              "FieldValue" : 138.73
            }
          }
        } ]
      },
      "swapOutputs" : { },
      "portfolioDescription" : {
        "portfolioId" : -1,
        "portfolioCode" : "customPortfolio",
        "portfolioName" : "customPortfolio"
      },
      "fxForwardOutputs" : { },
      "fxOptionsOutputs" : { },
      "swaptionOutputs" : { }
    }
  }
}
